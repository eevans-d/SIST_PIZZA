#!/bin/bash

# ============================================================================
# SCRIPT DE VERIFICACIรN - RUTA PRODUCCIรN
# ============================================================================
# Este script verifica que todas las fases estรฉn configuradas correctamente
# antes de ejecutar en producciรณn

set -e

echo "โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ"
echo "โ                 ๐ VERIFICACIรN PRE-PRODUCCIรN                              โ"
echo "โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ"

# Colores
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

TOTAL=0
PASSED=0

check() {
  TOTAL=$((TOTAL + 1))
  if [ $? -eq 0 ]; then
    echo -e "${GREEN}โ${NC} $1"
    PASSED=$((PASSED + 1))
  else
    echo -e "${RED}โ${NC} $1"
  fi
}

# ============================================================================
# VERIFICACIรN 1: ARCHIVOS NECESARIOS
# ============================================================================
echo ""
echo "๐ VERIFICACIรN 1: Archivos necesarios"
echo "โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ"

test -f .env && check "โ .env existe"
test -f backend/package.json && check "โ backend/package.json existe"
test -f docs/03-setup-sql/PASO_2_SCHEMA_SQL.txt && check "โ PASO_2_SCHEMA_SQL.txt existe"
test -f docs/03-setup-sql/PASO_3_SEED_DATA_SQL.txt && check "โ PASO_3_SEED_DATA_SQL.txt existe"

# ============================================================================
# VERIFICACIรN 2: VARIABLES DE ENTORNO
# ============================================================================
echo ""
echo "๐ VERIFICACIรN 2: Variables de entorno"
echo "โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ"

grep -q "SUPABASE_URL=" .env && check "โ SUPABASE_URL configurada"
grep -q "SUPABASE_SERVICE_ROLE_KEY=" .env && check "โ SUPABASE_SERVICE_ROLE_KEY configurada"
grep -q "PORT=4000" .env && check "โ PORT configurado en 4000"

# ============================================================================
# VERIFICACIรN 3: BACKEND PREPARADO
# ============================================================================
echo ""
echo "๐ง VERIFICACIรN 3: Backend preparado"
echo "โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ"

cd backend
test -d node_modules && check "โ node_modules existe"
npm list express > /dev/null 2>&1 && check "โ express instalado"
npm list @supabase/supabase-js > /dev/null 2>&1 && check "โ supabase-js instalado"
test -f vitest.config.ts && check "โ vitest configurado"
cd ..

# ============================================================================
# VERIFICACIรN 4: CONECTIVIDAD
# ============================================================================
echo ""
echo "๐ VERIFICACIรN 4: Conectividad"
echo "โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ"

# Extraer Supabase URL
SUPABASE_URL=$(grep "SUPABASE_URL=" .env | cut -d'=' -f2)
timeout 3 curl -s "${SUPABASE_URL}/auth/v1/healthz" > /dev/null 2>&1 && check "โ Supabase estรก online"

# ============================================================================
# VERIFICACIรN 5: DOCUMENTACIรN PRODUCCIรN
# ============================================================================
echo ""
echo "๐ VERIFICACIรN 5: Documentaciรณn de producciรณn"
echo "โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ"

test -f PLAN_EJECUCION_PRODUCCION.md && check "โ PLAN_EJECUCION_PRODUCCION.md existe"
test -f MASTER_BLUEPRINT.md && check "โ MASTER_BLUEPRINT.md existe"
test -f CHECKLIST_ACCIONABLE.md && check "โ CHECKLIST_ACCIONABLE.md existe"

# ============================================================================
# RESUMEN
# ============================================================================
echo ""
echo "โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ"
echo "โ                         โ RESUMEN DE VERIFICACIรN                          โ"
echo "โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ"

PERCENTAGE=$((PASSED * 100 / TOTAL))
echo ""
echo -e "Verificaciones: ${GREEN}${PASSED}/${TOTAL}${NC} completadas (${PERCENTAGE}%)"

if [ $PASSED -eq $TOTAL ]; then
  echo -e "${GREEN}โ SISTEMA LISTO PARA PRODUCCIรN${NC}"
  echo ""
  echo "Prรณximos pasos:"
  echo "1. Ejecuta SQL en Supabase (FASE 1 de PLAN_EJECUCION_PRODUCCION.md)"
  echo "2. Verifica backend conectividad: curl http://localhost:4000/health"
  echo "3. Ejecuta tests: cd backend && npm test"
  echo ""
  exit 0
else
  echo -e "${RED}โ ALGUNAS VERIFICACIONES FALLARON${NC}"
  echo "Por favor resuelve los problemas anteriores antes de continuar"
  echo ""
  exit 1
fi

