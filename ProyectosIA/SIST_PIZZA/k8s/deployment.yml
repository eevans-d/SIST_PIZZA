apiVersion: v1
kind: Namespace
metadata:
  name: sist-pizza

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sist-pizza-config
  namespace: sist-pizza
data:
  NODE_ENV: "production"
  LOG_LEVEL: "info"
  REDIS_URL: "redis://redis-svc:6379"
  SUPABASE_URL: "http://postgres-svc:5432"

---
apiVersion: v1
kind: Secret
metadata:
  name: sist-pizza-secrets
  namespace: sist-pizza
type: Opaque
stringData:
  DB_PASSWORD: "${DB_PASSWORD}"
  SUPABASE_ANON_KEY: "${SUPABASE_ANON_KEY}"
  SUPABASE_SERVICE_KEY: "${SUPABASE_SERVICE_KEY}"
  CLAUDE_API_KEY: "${CLAUDE_API_KEY}"
  MODO_API_KEY: "${MODO_API_KEY}"
  CHATWOOT_API_KEY: "${CHATWOOT_API_KEY}"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: sist-pizza
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      serviceAccountName: sist-pizza-sa
      containers:
        - name: backend
          image: docker.io/eevans-d/sist-pizza-backend:latest
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          env:
            - name: PORT
              value: "3000"
            - name: NODE_ENV
              valueFrom:
                configMapKeyRef:
                  name: sist-pizza-config
                  key: NODE_ENV
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sist-pizza-secrets
                  key: DB_PASSWORD
            - name: CLAUDE_API_KEY
              valueFrom:
                secretKeyRef:
                  name: sist-pizza-secrets
                  key: CLAUDE_API_KEY
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
          livenessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /ready
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 5
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "sleep 15"]

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: sist-pizza
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: docker.io/eevans-d/sist-pizza-frontend:latest
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          resources:
            requests:
              cpu: 50m
              memory: 128Mi
            limits:
              cpu: 250m
              memory: 256Mi
          livenessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: backend-svc
  namespace: sist-pizza
  labels:
    app: backend
spec:
  type: ClusterIP
  selector:
    app: backend
  ports:
    - port: 3000
      targetPort: 3000
      name: http

---
apiVersion: v1
kind: Service
metadata:
  name: frontend-svc
  namespace: sist-pizza
  labels:
    app: frontend
spec:
  type: LoadBalancer
  selector:
    app: frontend
  ports:
    - port: 80
      targetPort: 3000
      protocol: TCP
      name: http

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sist-pizza-sa
  namespace: sist-pizza
