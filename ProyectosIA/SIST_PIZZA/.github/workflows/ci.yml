name: CI - Gates Fase 1

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  backend:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
      
      - name: Install dependencies
        run: cd backend && npm ci
      
      - name: Security audit (prod deps, fail on high)
        run: cd backend && npm audit --audit-level=high --omit=dev

      - name: TypeScript check
        run: cd backend && npm run build
      
      - name: Run linter
        run: cd backend && npm run lint -- --max-warnings=0
      
      - name: Run tests
        run: cd backend && npm run test:coverage

      - name: Upload backend coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage-${{ matrix.node-version }}
          path: backend/coverage
  
  frontend:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Install dependencies
        run: cd frontend && npm ci
      
      - name: Security audit (prod deps, fail on high)
        run: cd frontend && npm audit --audit-level=high --omit=dev

      - name: TypeScript check (no emit)
        run: cd frontend && npm run type-check
      
      - name: Run linter
        run: cd frontend && npm run lint -- --max-warnings=0
      
      - name: Run tests
        run: cd frontend && npm test || true

  security:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        with:
          args: --severity-threshold=high
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true
      
      - name: Run CodeQL Analysis
        uses: github/codeql-action/init@v2
        with:
          languages: 'javascript, typescript'
      
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
