global:
  resolve_timeout: 5m
  slack_api_url: '${SLACK_WEBHOOK_URL}'

route:
  receiver: 'slack-notifications'
  group_by: ['alertname', 'cluster', 'service']
  group_wait: 10s
  group_interval: 10s
  repeat_interval: 12h

  routes:
    # Critical alerts - immediate notification
    - match:
        severity: critical
      receiver: 'slack-critical'
      group_wait: 0s
      repeat_interval: 5m
      continue: true

    # Business alerts - daily digest
    - match:
        component: business
      receiver: 'slack-business'
      group_wait: 1m
      repeat_interval: 24h

    # Infrastructure warnings - 30m
    - match:
        component: infrastructure
      receiver: 'slack-infrastructure'
      group_wait: 5m
      repeat_interval: 30m

receivers:
  # Critical receiver with PagerDuty escalation
  - name: 'slack-critical'
    slack_configs:
      - channel: '#sist-pizza-critical'
        title: 'üö® ALERTA CR√çTICA'
        text: |
          {{ .GroupLabels.alertname }}
          Componente: {{ .CommonLabels.component }}
          Severidad: {{ .CommonLabels.severity }}
          
          {{ range .Alerts }}
            ‚Ä¢ {{ .Labels.instance }}: {{ .Annotations.description }}
          {{ end }}
        send_resolved: true
        color: 'danger'
        actions:
          - type: button
            text: 'Ver en Grafana'
            url: 'http://localhost:3001/d/sist-pizza-dashboard'
          - type: button
            text: 'Ver en Prometheus'
            url: 'http://localhost:9090'

    # PagerDuty escalation for critical
    pagerduty_configs:
      - service_key: '${PAGERDUTY_SERVICE_KEY}'
        description: '{{ .GroupLabels.alertname }}'
        details:
          component: '{{ .CommonLabels.component }}'
          severity: '{{ .CommonLabels.severity }}'

  # General notifications
  - name: 'slack-notifications'
    slack_configs:
      - channel: '#sist-pizza-alerts'
        title: '‚ö†Ô∏è ALERTA: {{ .GroupLabels.alertname }}'
        text: |
          Severidad: {{ .CommonLabels.severity }}
          Componente: {{ .CommonLabels.component }}
          
          {{ range .Alerts }}
            üìå {{ .Labels.instance }}
            {{ .Annotations.summary }}
            {{ .Annotations.description }}
          {{ end }}
        send_resolved: true
        color: '{{ if eq .Status "firing" }}warning{{ else }}good{{ end }}'

  # Business metrics receiver
  - name: 'slack-business'
    slack_configs:
      - channel: '#sist-pizza-business'
        title: 'üìä M√©trica de Negocio: {{ .GroupLabels.alertname }}'
        text: |
          {{ range .Alerts }}
            {{ .Annotations.summary }}
            {{ .Annotations.description }}
          {{ end }}
        send_resolved: false
        color: 'good'

  # Infrastructure receiver
  - name: 'slack-infrastructure'
    slack_configs:
      - channel: '#sist-pizza-infrastructure'
        title: 'üîß Infraestructura: {{ .GroupLabels.alertname }}'
        text: |
          {{ range .Alerts }}
            Instancia: {{ .Labels.instance }}
            {{ .Annotations.description }}
          {{ end }}
        send_resolved: true
        color: '{{ if eq .Status "firing" }}warning{{ else }}good{{ end }}'

inhibit_rules:
  # Suppress warnings if critical alert exists for same component
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['alertname', 'component']

  # Suppress info if warning exists for same component
  - source_match:
      severity: 'warning'
    target_match:
      severity: 'info'
    equal: ['alertname', 'component']

  # Don't alert on service restart during maintenance
  - source_match:
      alertname: 'ServiceDown'
    target_match:
      alertname: 'FrequentPodRestarts'
    equal: ['pod_name']
