name: Qwen Code Analyzer

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      apply:
        description: 'If true, create branch, push and open PR'
        required: false
        default: 'false'

permissions:
  contents: read
  issues: write

jobs:
  analyze:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install dependencies
      run: |
        npm ci

    - name: Get changed files (PR)
      if: github.event_name == 'pull_request'
      id: changed
      run: |
        git fetch origin main --depth=1 || true
        FILES=$(git diff --name-only origin/main...HEAD || git diff --name-only HEAD^ HEAD || true)
        echo "files<<EOF" >> $GITHUB_OUTPUT
        echo "$FILES" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Ejecutar análisis con Qwen
      env:
        QWEN_API_KEY: ${{ secrets.QWEN_API_KEY }}
        QWEN_API_URL: ${{ secrets.QWEN_API_URL }}
        QWEN_MODEL: qwen-max
        FILES: ${{ steps.changed.outputs.files }}
      run: |
        if [ -z "${QWEN_API_KEY:-}" ]; then
          echo "❌ QWEN_API_KEY no definido. Abortando."
          exit 2
        fi
        if [ -n "$FILES" ]; then
          echo "🔍 Analizando archivos cambiados en PR..."
          node .github/scripts/qwen-analyzer.js --files "$FILES"
        else
          echo "🔍 Analizando todo el repositorio..."
          node .github/scripts/qwen-analyzer.js
        fi

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: qwen-analysis-artifacts
        path: |
          qwen-report.json
          artifacts/

    - name: Comment on Pull Request
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          if (!fs.existsSync('qwen-report.json')) return;
          const report = JSON.parse(fs.readFileSync('qwen-report.json', 'utf8'));
          const { resumen } = report;
          const emoji = n => n > 0 ? '🔴' : '🟢';
          const runUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${process.env.GITHUB_RUN_ID}`;

          const bodyLines = [
            '## 🔍 Análisis Automático con Qwen',
            '',
            `**Score:** ${resumen.score_general}/100`,
            '',
            `- ${emoji(resumen.criticos)} Críticos: ${resumen.criticos}`,
            `- ${emoji(resumen.altos)} Altos: ${resumen.altos}`,
            `- 🟡 Medios: ${resumen.medios}`,
            `- 🟢 Bajos: ${resumen.bajos}`,
            '',
            `[Ver reporte completo](${runUrl})`,
            '',
            '> ℹ️ **Nota**: Los PRs desde forks no tienen acceso a secrets. Si este PR es de un fork, un maintainer debe ejecutar manualmente el workflow.'
          ];
          const body = bodyLines.join('\n');

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: body
          });

    - name: Create branch, push & open PR (apply)
      if: ${{ github.event_name == 'workflow_dispatch' && (github.event.inputs.apply == 'true' || env.APPLY == 'true') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BRANCH_NAME: qwen-analyzer-setup/${{ github.run_id }}
        GIT_AUTHOR_NAME: github-actions[bot]
        GIT_AUTHOR_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
      run: |
        set -e
        echo "==> Preparando branch ${BRANCH_NAME}"
        git config user.name "${GIT_AUTHOR_NAME}"
        git config user.email "${GIT_AUTHOR_EMAIL}"

        git checkout -b "${BRANCH_NAME}"

        git add .github/prompts/analyzer-prompt.md || true
        git add .github/scripts/qwen-analyzer.js || true
        git add .github/scripts/smoke_test.sh || true
        git add .github/workflows/qwen-analyzer.yml || true
        git add package.json || true
        git add .gitignore || true
        git add README.md || true

        if git diff --staged --quiet; then
          echo "No hay cambios para commitear. Abortando apply."
          exit 0
        fi

        git commit -m "feat: add qwen passive analyzer (auto)"
        git push --set-upstream origin "${BRANCH_NAME}"

        PR_PAYLOAD=$(jq -n --arg title "feat: add qwen passive analyzer (auto)" \
                          --arg head "${BRANCH_NAME}" \
                          --arg base "main" \
                          --arg body "Auto-generated by workflow run $GITHUB_RUN_ID. Revisar artifacts y qwen-report.json." \
                          '{title:$title, head:$head, base:$base, body:$body}')
        echo "Creando PR..."
        PR_RESPONSE=$(curl -s -X POST -H "Authorization: token ${GITHUB_TOKEN}" \
          -H "Accept: application/vnd.github+json" \
          https://api.github.com/repos/${{ github.repository }}/pulls \
          -d "$PR_PAYLOAD")
        echo "$PR_RESPONSE" | jq '.html_url' || true

        PR_URL=$(echo "$PR_RESPONSE" | jq -r '.html_url // empty')
        if [ -n "$PR_URL" ]; then
          echo "PR URL: $PR_URL"
        else
          echo "No se pudo crear PR (ver logs)."
        fi
