name: CI - Backend & Frontend

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '20'

jobs:
  backend:
    name: Backend (Lint, Type-Check, Tests)
    runs-on: ubuntu-latest
    timeout-minutes: 15

    defaults:
      run:
        working-directory: ProyectosIA/SIST_PIZZA/backend

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ProyectosIA/SIST_PIZZA/backend/package-lock.json

      - name: Install Dependencies
        run: npm ci

      - name: Type Check
        run: npx tsc --noEmit

      - name: Lint Code
        run: npx eslint . --ext .ts --max-warnings 0

      - name: Run Tests
        run: npm test -- --coverage --passWithNoTests
        env:
          NODE_ENV: test
          SUPABASE_URL: http://localhost:54321
          SUPABASE_ANON_KEY: test-anon-key
          SUPABASE_SERVICE_ROLE_KEY: test-service-role-key

      - name: Upload Coverage Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: ProyectosIA/SIST_PIZZA/backend/coverage
          retention-days: 30

  frontend:
    name: Frontend (Lint, Type-Check, Tests)
    runs-on: ubuntu-latest
    timeout-minutes: 15

    defaults:
      run:
        working-directory: ProyectosIA/SIST_PIZZA/frontend

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ProyectosIA/SIST_PIZZA/frontend/package-lock.json

      - name: Install Dependencies
        run: npm ci

      - name: Type Check
        run: npx tsc --noEmit

      - name: Lint Code
        run: npx eslint src --ext ts,tsx --max-warnings 0

      - name: Run Tests
        run: npm test -- --coverage --passWithNoTests --run
        env:
          NODE_ENV: test

      - name: Upload Coverage Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: ProyectosIA/SIST_PIZZA/frontend/coverage
          retention-days: 30

  docker-build:
    name: Docker Build Test
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: [backend, frontend]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Backend Image
        uses: docker/build-push-action@v5
        with:
          context: ProyectosIA/SIST_PIZZA/backend
          file: ProyectosIA/SIST_PIZZA/docker/Dockerfile.backend
          push: false
          tags: sist-pizza-backend:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build Frontend Image
        uses: docker/build-push-action@v5
        with:
          context: ProyectosIA/SIST_PIZZA/frontend
          file: ProyectosIA/SIST_PIZZA/docker/Dockerfile.frontend
          push: false
          tags: sist-pizza-frontend:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

  security-scan:
    name: Security Audit
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Audit Backend Dependencies
        working-directory: ProyectosIA/SIST_PIZZA/backend
        run: npm audit --audit-level=high
        continue-on-error: true

      - name: Audit Frontend Dependencies
        working-directory: ProyectosIA/SIST_PIZZA/frontend
        run: npm audit --audit-level=high
        continue-on-error: true

  summary:
    name: CI Summary
    runs-on: ubuntu-latest
    needs: [backend, frontend, docker-build, security-scan]
    if: always()

    steps:
      - name: Check Job Status
        run: |
          echo "Backend: ${{ needs.backend.result }}"
          echo "Frontend: ${{ needs.frontend.result }}"
          echo "Docker Build: ${{ needs.docker-build.result }}"
          echo "Security Scan: ${{ needs.security-scan.result }}"
          
          if [[ "${{ needs.backend.result }}" != "success" ]] || [[ "${{ needs.frontend.result }}" != "success" ]]; then
            echo "❌ CI Pipeline Failed"
            exit 1
          fi
          
          echo "✅ CI Pipeline Passed"
